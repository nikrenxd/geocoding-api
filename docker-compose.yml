services:
  web-app:
    &web-app
    build:
      context: .
      dockerfile: src/Dockerfile
    command: "fastapi run src/app/server.py --reload "
    ports:
      - "${SERVER_PORT}:8000"
    env_file:
      - .env
    volumes:
      - .:/app/
    depends_on:
      - postgres
      - rabbitmq
      - redis

  taskiq-worker:
    <<: *web-app
    ports: []
    command: "taskiq worker -fsd src.app.core.tkq.broker:pika_broker -w 1"

  taskiq-scheduler:
    <<: *web-app
    ports: []
    command: "taskiq scheduler -fsd src.app.core.tkq.scheduler:scheduler"

  postgres:
    image: postgres:17-alpine
    container_name: postgresdb
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:8-alpine3.21
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"

  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: rabbit
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RMQ_DEFAULT_VHOST}
    ports:
      - "${RMQ_PORT}:5672"
      - "${RMQ_DASHBOARD_PORT}:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  pgdata:
  rabbitmq-data: